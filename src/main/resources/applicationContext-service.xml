<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd"
	default-lazy-init="true">
	
	<description>applicationContext-service</description>
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.genertech">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
	</context:component-scan>
	
	<bean id="dataSource" class="com.genertech.core.db.DynamicDataSource">
		<property name ="targetDataSources">
        	<map key-type ="java.lang.String">
                <entry value-ref="crv" key="crv"></entry>
                <entry value-ref="demo" key="demo"></entry>
                <entry value-ref="emis" key="emis"></entry>
            </map>
       	</property>
       	<property name="defaultTargetDataSource" ref="emis"></property>  
	</bean>
	
	<bean id="crv" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.crv.url}"></property>
		<property name="user" value="${jdbc.crv.username}"></property>
		<property name="password" value="${jdbc.crv.password}"></property>
		<!-- 连接池中拥有的最小连接数 -->
		<property name="minPoolSize" value="10" />
		<!-- 连接池中拥有的最大连接数 -->
		<property name="maxPoolSize" value="100" />
		<!-- 连接池初始化时创建的连接数 -->
		<property name="initialPoolSize" value="10" />
		<!-- 连接池在无空闲连接可用时一次性创建的新数据库连接数 -->
		<property name="acquireIncrement" value="10" />
		<!-- 连接池为数据源单个Connection缓存的PreparedStatement数 -->
		<property name="maxStatementsPerConnection" value="1000" />
		<!-- 连接的最大空闲时间单位是秒 -->
		<property name="maxIdleTime" value="60" />
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数 -->
		<property name="acquireRetryAttempts" value="30" />
		<!-- 自动检查连接池中连接是否正常的时间单位是秒 -->
		<property name="idleConnectionTestPeriod" value="10" />
		<!-- 启动时测试数据连接 -->
		<property name="preferredTestQuery" value="select * from DUAL" />
	</bean>
	
	<bean id="demo" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.demo.url}"></property>
		<property name="user" value="${jdbc.demo.username}"></property>
		<property name="password" value="${jdbc.demo.password}"></property>
		<!-- 连接池中拥有的最小连接数 -->
		<property name="minPoolSize" value="10" />
		<!-- 连接池中拥有的最大连接数 -->
		<property name="maxPoolSize" value="100" />
		<!-- 连接池初始化时创建的连接数 -->
		<property name="initialPoolSize" value="10" />
		<!-- 连接池在无空闲连接可用时一次性创建的新数据库连接数 -->
		<property name="acquireIncrement" value="10" />
		<!-- 连接池为数据源单个Connection缓存的PreparedStatement数 -->
		<property name="maxStatementsPerConnection" value="1000" />
		<!-- 连接的最大空闲时间单位是秒 -->
		<property name="maxIdleTime" value="60" />
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数 -->
		<property name="acquireRetryAttempts" value="30" />
		<!-- 自动检查连接池中连接是否正常的时间单位是秒 -->
		<property name="idleConnectionTestPeriod" value="10" />
		<!-- 启动时测试数据连接 -->
		<property name="preferredTestQuery" value="select * from DUAL" />
	</bean>

	<!-- Spring datasource -->
	<bean id="emis" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}"></property>
		<property name="jdbcUrl" value="${jdbc.emis.url}"></property>
		<property name="user" value="${jdbc.emis.username}"></property>
		<property name="password" value="${jdbc.emis.password}"></property>
		<!-- 连接池中拥有的最小连接数 -->
		<property name="minPoolSize" value="10" />
		<!-- 连接池中拥有的最大连接数 -->
		<property name="maxPoolSize" value="100" />
		<!-- 连接池初始化时创建的连接数 -->
		<property name="initialPoolSize" value="10" />
		<!-- 连接池在无空闲连接可用时一次性创建的新数据库连接数 -->
		<property name="acquireIncrement" value="10" />
		<!-- 连接池为数据源单个Connection缓存的PreparedStatement数 -->
		<property name="maxStatementsPerConnection" value="1000" />
		<!-- 连接的最大空闲时间单位是秒 -->
		<property name="maxIdleTime" value="60" />
		<!-- 定义在从数据库获取新连接失败后重复尝试的次数 -->
		<property name="acquireRetryAttempts" value="30" />
		<!-- 自动检查连接池中连接是否正常的时间单位是秒 -->
		<property name="idleConnectionTestPeriod" value="10" />
		<!-- 启动时测试数据连接 -->
		<property name="preferredTestQuery" value="select * from DUAL" />
	</bean>

	<!-- SqlSessionFactory配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage">
			<value>
				com.genertech.phm.emisCc.model,
				com.genertech.phm.log.model,
				com.genertech.crv.entity,
				com.genertech.phm.resume.entity,
			</value>
		</property>
		<!-- mybatis的映射文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations"
			value="classpath*:com/genertech/**/dao/mappers/**/*.xml">
		<!-- 
		<list>
			<value>classpath*:com/genertech/framework/dao/mappers/*.xml</value>
			<value>classpath*:com/genertech/infosystem/dao/mappers/*.xml</value>
		</list>
		-->
		</property>
		<!-- 添加分页过滤器 -->
		<!-- 
		<property name="plugins"> 
			<ref bean="pageInterceptor" />
		</property>
		-->
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!--启动spring事务注解功能 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置事务特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
 	
	<!-- 事务控制拦截器 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="txPointCut"
			expression="execution(* com.genertech..service.impl..*.*(..))" />
		<aop:advisor pointcut-ref="txPointCut" advice-ref="txAdvice" />
	</aop:config>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 逗号或分号分隔符设置多于一个的包路径 -->
		<property name="basePackage" value="com.genertech.**.dao" />
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
	</bean>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>